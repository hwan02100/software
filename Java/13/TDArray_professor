//교수님꺼
//java_Day11강의자료 24페이지 Processing Two-Dimensional Arrays 

import java.util.Scanner;

class TDArray_professor
{
	public static void main(String args[])
	{
		int [][] arr = new int [3][4];
		initArr1(arr);
		printArr(arr);
		System.out.println("모든 성분의 합 : " + sumArr(arr));
		colSum(arr);
		System.out.println("모든 성분 중 최댓값: " + maxArr(arr));
	
	//	System.out.printf("최댓값은 %d행, %d열에 존재\n", indexOfMax(arr)[0], indexOfMax[1] )
	//위의 방법은 좀 헷갈릴 수 있으니 다른 방법도 써보자
		int [] rslt = indexOfMax(arr);
		System.out.printf("최댓값은 %d행, %d열에 존재\n", rslt[0]+1, rslt[1]+1);	
		
		shuffleArr(arr);
		printArr(arr);
	}
	
	
	
	
	static void initArr1(int [][] arr)
	{
		Scanner s = new Scanner(System.in);
		for(int i=0; i<arr.length; i++)
		{
			for(int j=0; j<arr[0].length; j++)
			{
			/*
			//이건 입력받는거(ㄱㅊ.....)	
				System.out.printf("%d행 %d열 성분 : ", i+1, j+1);
				arr[i][j] = s.nextInt();
			*/

			//0이상 50이하의 정수로 초기화
				arr[i][j] = (int)(Math.random()*51);
			}
		}
	}
	
	static void printArr(int [][] arr)
	{
		for(int i=0; i<arr.length; i++)
		{
			for(int j=0; j<arr[0].length; j++)			//i행 출력
				System.out.print(arr[i][j] + " ");
			System.out.println();					//개행
		}
	}
	
	static int sumArr(int [][] arr)
	{
		int sum=0;
		
		for(int i=0; i<arr.length; i++)
		{
			for(int j=0; j<arr[i].length; j++)
				sum += arr[i][j];
		}
		
		return sum;
	}
	
	static void colSum(int [][] arr)
	{
		int sum=0;
		
		for(int j=0; j<arr[0].length; j++)
		{
			for(int i=0; i<arr.length; i++)		//j열의 합
				sum += arr[i][j];
			System.out.printf("%d열의 합 : %d\n", j+1, sum);	
			sum=0;
		}
	}
	
	static int maxArr(int [][] arr)
	{
		int max = arr[0][0];
		for(int i=0; i<arr.length; i++)
		{
			for(int j=0; j<arr[i].length; j++)
			{
				if(max<arr[i][j])
					max = arr[i][j];
			}
		}		
		return max;
	}
	
	static int[] indexOfMax(int [][] arr)
	{
		int max = arr[0][0];
		int [] index = {0, 0};		//배열의 성분이 두개인 배열 하나를 반환받자
		
		for(int i=0; i<arr.length; i++)
		{
			for(int j=0; j<arr[i].length; j++)
			{
				if(max<arr[i][j])
				{
					max = arr[i][j];
					index[0] = i;
					index[1] = j;
				}
			}
		}		
		return index;
	}
	
	static void shuffleArr(int [][] arr)
	{
		//arr[i][j] <-> arr[r1][r2], 이때 r1, r2는 랜덤하게 설정
		int tmp, r1, r2;
		
		for(int i=0; i<arr.length; i++)
		{
			for(int j=0; j<arr[0].length; j++)			//이건 어느위치에 뭐가 올지 정하는게 아니라
												//자리를 바꾸는 것!!
			{
				r1 = (int)(Math.random()*arr.length);
				r2 = (int)(Math.random()*arr[0].length);
				tmp = arr[i][j];
				arr[i][j] = arr[r1][r2];
				arr[r1][r2] = tmp;
			}
		}
	}	
}
