//서식지정자 : %~ -ex) %d(정수), %f(실수), %c(문자), %s(문장, 문자열)
//사용자로부터 정수 하나 입력받아 그대로 출력

import java.util.Scanner;

class FormatSpecifier
{
	public static void main(String [] args)
	{
		Scanner s = new Scanner(System.in);
/*
	//사용자로부터 정수 하나 입력받아 그대로 출력	
		int input;
		System.out.print("정수 : ");
		input = s.nextInt();
		
		System.out.println("입력하신 정수는 " + input + "입니다");
		System.out.printf("입력하신 정수는 %d입니다\n\n", input);
	
	//입력받은 수를 8진수로 출력하고 싶다 : %o(octal)을 이용하면 된다.  cf)%d(decimal)	
		System.out.printf("입력하신 정수의 8진수는 %o입니다\n", input);
	
	//입력받은 수를 16진수로 출력하고 싶다 : %x(hexadecimal)을 이용하자
		System.out.printf("입력하신 정수의 16진수는 %x입니다\n", input);
	
		//한거까지는 좋은데 출력했을 때 뭐가 8진수고 뭐가 16진수인지 구분이 안간다.
		//숫자앞에 0이 붙으면 8진수, 0x가 붙으면 16진수로 표기
		//%와 서식지정자 사이에 #을 붙여주자
		System.out.printf("입력하신 정수의 8진수는 %#o입니다\n", input);
		System.out.printf("입력하신 정수의 16진수는 %#x입니다\n\n", input);
		
		System.out.printf("입력하신 정수는 %d, %#o, %#x입니다\n", input, input, input);		//이렇게 3번 적는게 귀찮다
		System.out.printf("입력하신 정수는 %d, %1$#o, %1$#x입니다\n", input);			//1$ : 첫번째 인자를 사용하겠다는 의미
		System.out.printf("입력하신 정수는 %d, %1$#o, %2$#x입니다\n", input, input);		//이렇게도 가능하다
*/
	

/*
	//사용자로부터 정수를 두개 입력받아 복소수 real+imagi를 출력	
		int real, imag;
		System.out.print("실수부 : ");
		real = s.nextInt();
		System.out.print("허수부 : ");
		imag = s.nextInt();
		
		System.out.println("복소수 = " + real + " + " + imag + "i");			//이렇게 하면 허수부의 부호가 플러스일때는 잘 나오는데, 마이너스일때는 이상하게 나온다
		System.out.printf("복소수 = %d %+di\n", real, imag);					//그래서 %d부분에 +를 집어넣으면 부호가 출력된다
*/

/*
		int input;
		double d;
		
		System.out.print("실수 : ");
		d = s.nextDouble();
		
		System.out.printf("입력하신 실수는 %+5.3f입니다.\n", d);				//%+5.3f = 5칸을 확보하고 소수점아래 3자리까지, 부호포함
																	//여기서 . 도 한 칸으로 친다 
		System.out.print("정수 : ");
		input = s.nextInt();
		System.out.printf("입력하신 정수는 %-5d입니다\n", input);				//이렇게 하면 5칸을 확보하고 왼쪽정렬
		
		System.out.printf("입력하신 정수의 문자형태는 %c입니다.\n", input);		//정수의 문자형태 출력
		
		System.out.printf("%s\n", "Hello");									//그냥 문자열 출력
*/			
	}
}
