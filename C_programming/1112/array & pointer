#include <stdio.h>

void main(void)
{

/*
	int i;
	int a[] = {10,20,30,40,50};	//한 성분당 4바이트씩 해서 총 20바이트
							//여기서 a는 첫번째 성분의 주소

//베열 출력방법1
	for(i=0; i<5; i++)
		printf("%d ", a[i]);
	puts("");


	printf("배열명 : %d\n", a);
	printf("첫번째성분의 주소 : %d\n", &a[0]);	//이 결과로 알 수 있는 게, [배열의 이름의 주소는 첫번째 성분의 주소와 같다]
	puts("");

	printf("배열명 : %d", a);
	getchar();
	printf("a+1 : %d", a+1);		// 이렇게 하면 바로위의 결과값에 +4가 나온다	
						// int 는 4바이트니까
	puts("\n");

	printf("배열명 : %d", a);
	getchar();
	printf("*(a+1) : %d\n", *(a+1));		//a+1은 20의 주소

	puts("\n");
	printf("배열명 : %d", a);
	getchar();
	printf("*(a+4) : %d\n", *(a+4));
*/

	int i;
	int a[] = {10,20,30,40,50};	
	int* p = a;	//a는 10의 주소가 들어가있기 때문에
				//즉, p에는 배열명이 저장되어있다.
	
//베열 출력방법1
	for(i=0; i<5; i++)
		printf("%d ", a[i]);
	puts("");

//배열 출력방법2
	for(i=0; i<5; i++)
		printf("%d ", *(a+i));
	puts("");

//베열 출력방법3
	for(i=0; i<5; i++)
		printf("%d ", p[i] );
	puts("");

//배열 출력방법4
	for(i=0; i<5; i++)
		printf("%d ", *(p+i));	//p가 배열명(a)와 같기 때문에
	puts("");

//배열 출력방법5
	for(i=0; i<5; i++)
		printf("%d ", *(p++));	
	puts("");
/*	
	for(i=0; i<5; i++)
		printf("%d ", *(a++));	//이렇게하면 a는 상수이기 때문에 컴파일 불가
	puts("");
*/	
	p=a;		//다시 돌려주자

}
