#include <stdio.h>
#include <math.h>

//3차원 상의 점을 표현하는 구조체
struct point
{
	double x,y,z;		//...되네?
	
};
typedef struct point point;


/*				//요거는 그냥 알아놓자, 이렇게도 쓰일수 있다는 거
typedef struct
{
	double x;
	double y;
	double z;
} point;
*/
double dist(point p);
double dist_p(point* p);

void main(void)
{
	point p1 = {1, 2, 3};
	point* p_p1 = &p1;		//주소로 표현할 때, 자료형을 위에 정의한 그대로 point를 사용한다.
	point p2 = {1, 1, 1};
	point* p_p2 = &p2;

	printf("(%.1f, %.1f, %.1f)\n", p1.x, p1.y, p1.z);
	printf("(%.1f, %.1f, %.1f)\n", p_p1->x, p_p1->y, p_p1->z);	//주소에서 접근하려면 -> 화살표를 사용하자
	printf("원점과의 거리 : %.2f\n", dist(p1) );
	printf("(1,1,1)과 원점과의 거리 : %.2f\n", dist_p(p_p2) );
}

//점을 매개변수로 받아 원점과의 거리 반환하는 함수
double dist(point p)
{
	double length =0;
	length = sqrt( pow(p.x, 2) + pow(p.y, 2) + pow(p.z, 2) );
	return length;
}

//점의 주소를 매개변수로 받아 원점과의 거리 반환하는 함수
double dist_p(point* p)
{
	return sqrt( pow(p->x, 2) + pow(p->y, 2) + pow(p->z, 2) );
}
