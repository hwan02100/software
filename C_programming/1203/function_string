#include <stdio.h>
#include <string.h>

void main(void)
{

/*
	char str1[] = { 'H', 'e' , 'l', 'l', 'o' };		//이건 5개짜리 배열?
											//놉
											//이건 뒤에 \0이 빠진 6개짜리 배열이다
	
	printf("%s\n", str1);			//이렇게 하면 이상하게 나온다
							//%s라는게 null문자가 있을때까지 출력하는 건데 그게 없으니 오류가 터진다
							//따라서
*/

//문자열 초기화 방법1
	char str1[6] = { 'H', 'e' , 'l', 'l', 'o' };		//이렇게 해야한다.
	//printf("%s\n", str1);						//선언은 처음에 해줘야하니 얘네들은 잠시 숨겨놓자

//문자열 초기화 방법2
	char str2[] = "Hello" ;
	//printf("%s\n", str2);

/*
//str2의 4번째 성분을 NULL로 변경
	str2[3] = '\0';
	printf("%s\n", str2);			//%s는 NULL을 만나기 전까지 출력하기 때문에 
							//Hel 이 출력된다
*/

//문자열 초기화 방법3 : 근데 이 방법은 제약이 있다
	char* str3 = "Hello";

/*
//str3의 3번째 성분을 NULL로 변경
//str3[2] = '\0';	: 상수를 변경하기 때문에 불가!!
	str3[3] = '\0';
	printf("%s\n", str3);
*/

/*
		------------------------			   	  복사			-----------------------
10번지		H			이건 상수!		ㅡㅡㅡ>		str2		H			이거도 변수!!
			e											e			그래서 중간에 있는 l을 \0로 변환이 가능
			l											l								
			l											l
			o											o
			\0											\0
		-----------------------								-----------------------
str1			H			이건 변수!					str3		10번지		물론 이거도 변수다
			e										-----------------------	
			l
			l
			o
			\0
		-----------------------
*/

	char str4[100] = { 'H', 'e' , 'l', 'l', 'o' };

/*
//문자열 함수1 : strlen()
	printf("str3의 길이 : %d\n", strlen(str4) );		//이건 \0 전까지의 길이를 알려주기 때문에 그냥 5가 나온다
											// 여기서 strlen 밑의 빨간 밑줄을 없애기 위해 위해 include <string.h> 를 적어주자
*/

	char* str5 = "C programming~!!" ;


//문자열 함수2 : strcpy()
	//str4 = "C programming~!!"; : 불가!!
	strcpy(str4, str5);
	printf("str5를 str4에 복사한 결과 : %s\n", str4);		//복사할 것의 크기와 피문자열의 크기가 맞아야한다. 아니면 크거나
												//str4배열의 크기 >= str5의 길이+1

/*

//문자열 함수3 : strcat()
	//Hello에다가 C programming~!!을 연결하고 싶다
	strcat(str4, str5);		// 만약에 strcat(str1, str5)를 하면 str1의 사이즈가 너무 작아서 제대로 연결이 안된다
						// 할거면 str1[22]로 해야한다. 
						// 이건 뒤의 씨프로그래밍 까지 더한거에 \0까지 계산해준것
	printf("str4를 str5에 연결 : %s\n", str4);
*/

	printf("str5와 str4 비교 : %d\n", strcmp(str4, str5) );
	printf("str5와 str4 비교 : %s\n", strcmp(str4, str5)? "불일치" : "일치" );

}
