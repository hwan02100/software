#include <stdlib.h>

void main(void)
{
	
	int arr[10] = {1,2,3,4,5};	//이건 정수의 배열
							//칸을 10개로 잡았는데 5개만 넣으면 될까?
							//된다. 나머지는 0으로 설정
	
	//초기화방법 1
	char str[6] = {'H', 'e', 'l', 'l', 'o'} ;	//이건 문자열의 배열
									//Hello 를 저장하고 싶다
									//문자가 5개 있으니 칸을 5개로 잡으면 되나?
									//ㄴㄴ 하나 더 크게 해서 6으로 해야한다.
	
	//초기화방법 2
	char str2[] = "Hello";			//문자열을 넣어서 초기화시킨다
								//str2[] : 배열의 이름  = 첫번째 성분의 주소
								//*str2 = H

	//초기화방법 3
	char* str3 = "Hello";

	int i;

	//정수형 배열 arr의 사이즈를 알아보자
	int size = sizeof(arr)/sizeof(arr[0]) ;	//이건 정수 5개짜리의 배열이니 20
									//거기다가 1개짜리의 배열크기 4를 나눴으니 5
	int size2 = sizeof(str)/sizeof(str[0]);

	for(i=0; i<size; i++)
		printf("%d ", arr[i]);
	puts("");

	for(i=0; i<size2; i++)
		printf("%c", str[i]);			//이렇게 하면 Hello가 출력된다								//만약에 str[5] = {~~~} 로 했다면 어떻게 될까?
																					//여기는 잘 출력된다.
	puts("");

	//문자배열의 경우 반복문을 사용하지 않고도 출력가능
	printf("%s\n", str);			//문자들의 배열만 이런식으로 %s를 이용하여 출력할수 있다.				//여기가 문제다.
																					//보통 문장의 마지막에는 \0이라는 null문자가 저장된다.\
																					//따라서 한칸 더 키워주는 이유는 마지막의 null문자를 위함이다.
	//Hello 를 HellO로 바꾸고 싶다(마지막 알파벳만 대문자로)
	str[4] = 'O';
	printf("변경 후 : %s\n", str);								//여기서 str은 문장의 주소이다.
														//즉 첫번째성분 H의 주소이다.
														// %s : str(주소)에 저장된 문자부터 null 문자를 만날때까지 출력


	//Hello 를 HellO로 바꾸고 싶다(마지막 알파벳만 대문자로) - 다른방법
	printf("str3 : %s\n", str3);
	str3[4] = 'O';
	printf("변경후 str3 : %s\n", str3);			//이렇게 하면 안된다
										//왜? 위에서 char* str3 = "Hello"처럼 큰 따옴표로 초기화를 하면
										// 통째로 움직이기 때문에, 하나만 쏙 빼서 바꾸는 게 불가능


	//반복문을 사용하여 null 문자를 만날때까지 문자열의 문자를 출력 
	// 배열의 성분을 쓰지 말고!!
	for(i=0; str[i]!='\0'; i++)		//이렇게 for문에 조건이 와도 된다.
		printf("%c", str[i]);	
	puts("");

	i=0;			//이거 안해주면 안된다
	while(str[i] != '\0')
	{
		printf("%c", str[i]);
		i++;
	}
	puts("");
}
